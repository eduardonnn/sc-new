-- Verifica se o exploit suporta Drawing API
if not Drawing then
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "ESP Indisponível";
        Text = "Seu exploit não suporta a Drawing API.";
        Duration = 8
    })
    return
end

-- Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

-- Configurações
_G.ESPEnabled = true
_G.TeamCheck = false
_G.TextColor = Color3.fromRGB(255, 255, 255)
_G.TextSize = 8
_G.Outline = true
_G.TextTransparency = 1
_G.TextFont = Drawing.Fonts.UI
_G.DisableKey = Enum.KeyCode.Y

local Typing = false

-- Controle de digitação
UserInputService.TextBoxFocused:Connect(function() Typing = true end)
UserInputService.TextBoxFocusReleased:Connect(function() Typing = false end)

-- Toggle por tecla
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == _G.DisableKey and not Typing then
        _G.ESPEnabled = not _G.ESPEnabled
        game:GetService("StarterGui"):SetCore("SendNotification",{
            Title = "ESP (Cafézinho)";
            Text = "ESP " .. (_G.ESPEnabled and "ativado" or "desativado");
            Duration = 4
        })
    end
end)

-- Armazena ESPs ativos
local ESPObjects = {}

-- Remove ESPs de players que saíram ou morreram
Players.PlayerRemoving:Connect(function(player)
    if ESPObjects[player] then
        for _, obj in pairs(ESPObjects[player]) do pcall(function() obj:Destroy() end) end
        ESPObjects[player] = nil
    end
end)

-- Atualização em tempo real
RunService.RenderStepped:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Head") and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health > 0 then

            if _G.TeamCheck and player.Team == LocalPlayer.Team then
                if ESPObjects[player] then
                    ESPObjects[player].Name.Visible = false
                    ESPObjects[player].Chams.Enabled = false
                end
                continue
            end

            if not ESPObjects[player] then
                ESPObjects[player] = {
                    Name = Drawing.new("Text"),
                    Chams = Instance.new("Highlight")
                }

                local Name = ESPObjects[player].Name
                Name.Size = _G.TextSize
                Name.Color = _G.TextColor
                Name.Center = true
                Name.Outline = _G.Outline
                Name.Font = _G.TextFont
                Name.Transparency = _G.TextTransparency

                local Chams = ESPObjects[player].Chams
                Chams.FillColor = Color3.new(1, 1, 1)
                Chams.FillTransparency = 0.5
                Chams.OutlineColor = Color3.new(1, 1, 1)
                Chams.OutlineTransparency = 0
                Chams.Enabled = true
                Chams.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                Chams.Adornee = player.Character
                Chams.Parent = game:GetService("CoreGui")
            end

            local HRP = player.Character.HumanoidRootPart
            local Head = player.Character.Head
            local Humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local pos, onScreen = Camera:WorldToViewportPoint(HRP.Position)

            local Name = ESPObjects[player].Name
            local Chams = ESPObjects[player].Chams

            if onScreen and _G.ESPEnabled then
                local distance = math.floor((HRP.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
                local health = math.floor(Humanoid.Health)

                Name.Position = Vector2.new(pos.X, pos.Y - 25)
                Name.Text = "("..distance.."m) "..player.Name.." ["..health.."]"
                Name.Visible = true
                Chams.Enabled = true
            else
                Name.Visible = false
                Chams.Enabled = false
            end
        else
            if ESPObjects[player] then
                ESPObjects[player].Name.Visible = false
                ESPObjects[player].Chams.Enabled = false

                -- Verifica se o player morreu ou perdeu a Character
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                    for _, obj in pairs(ESPObjects[player]) do pcall(function() obj:Destroy() end) end
                    ESPObjects[player] = nil
                end
            end
        end
    end
end)

-- Mensagem de carregamento
pcall(function()
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "ESP Café";
        Text = "ESP ativado";
        Duration = 15;
    })
end)
